done - implement pay()
done  * add handling for non-existing rows
done  * add handling of insufficient funds
done  * decimal arithmetics
done  * ensure source and destination accounts are never the same
done * use shorter identifiers for src_bic, src_ban, client id,
done * fetch old balances
done * add retrieval of a subset existing bic/bans, not random bic/bans
done * debug straightforward pay
done - implement pop()
done - implement check()
done - add total rps calculation
done - add latency calculation min/max
- add latency 95/99/99.9
- make the number of workers configurable
    https://github.com/spenczar/tdigest
- make scylla/cassandra credentials configurable
- add --report-interval (default 5 seconds) reporting
- add latency min/max/avg/99/99.9 to --report-interval
- add rps moving average to --report-interval
- implement repair:
  * add handling for pending_transfer != transfer_id
  * add handling for client  mismatch
- populate should resume until it performs exactly N writes
- populate should generate dups
- populate should create accounts in a predictable way, so that
  nothing is loaded back on start of pay()
- use more lightweight logging, zerolog or zap
